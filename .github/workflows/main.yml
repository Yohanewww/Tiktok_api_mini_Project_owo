name: Automated API Tests

on:
  push:
    branches:
      - main  # 你的主分支名称
  pull_request:
    branches:
      - main  # 你的主分支名称

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.4'  # 选择你想要使用的 Python 版本

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run API tests
      run: |
        # 运行你的 API 测试命令
        # 例如：python test.py
        python main.py & 
    - run: echo "temp deployed for api test success🎉"
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # 选择你想要使用的 Node.js 版本

    - name: Install Apifox CLI
      run: npm install -g apifox-cli

    - name: Running Test Scenario
      run: apifox run https://api.apifox.cn/api/v1/projects/3122443/api-test/ci-config/371736/detail?token=xprxMUsWMeDnlbJheRIxvx -r html,cli
    - run: echo "Api Test Success🎉"
    
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build Docker Image
      id: build
      uses: cloudposse/github-action-docker-build-push@main
      with:
        registry: registry.hub.docker.com
        organization: "${{ github.event.repository.owner.login }}"
        repository: "${{ github.event.repository.name }}"
        login: "${{ secrets.DOCKERHUB_USERNAME }}"
        password: "${{ secrets.DOCKERHUB_PASSWORD }}"
        platforms: linux/amd64,linux/arm64
        
    - run: echo Build Docker & Push Image Success🎉"
    outputs:
      image: ${{ steps.build.outputs.image }}
      tag: ${{ steps.build.outputs.tag }}
